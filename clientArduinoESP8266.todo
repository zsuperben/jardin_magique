-> READ EEPROM 
|| This is done whn loading code. 
|| Config lives inside the code


-> if config present
	=> load it 
        => get mac and ip out of it

        => This comes for free when config is inside code


	=> detect MAC/IP conflicts

		get default configd (random MAC + DHCP)
		compare EEPROM config 
		try MAC = WHOHAS(EEPROM IP ) 
		if MAC
			EEPROM.write(1024, 0x00) // Erase default config 
			reboot
		else 
			use loaded config (need to reboot ?)

-> else 
	get DHCP address
	get Config from "brain"
	write Config to EEPROM 


-----


Once config is loaded : 


POST MESURE 
Launch webclient. 
sleep for N sec 
POST mesure 

check reconfiguration token
	=> IF PRESENT 
		get new configuration 
		validate new config 
		writeconfig to EEPROM 
		REbooT
	=> else
		continue;

Clean Webclient 
delete WebClient
repeat
END POST MESURE 


---------------------------------------------------------------------------------------------------------
Configuration DATA STRUCTURE : 

All what is before position 69 must be treated as FIXED LENGTH 

We can have flexibility after that

Use Tokens to separate fields ;

Then use list = strtok(token, string)
Field separator : '\n'
Key/Value separator : '='

Example :
IPADDR=WXYZ(4bytes)
MCADDR=ABCDEF(6bytes)
SERVER=WXYZ(4 Bytes)
ID=sha1(NAME)(20 bytes)
NUMPLANT=1byte
// 35bytes so far

NAME=VARIABLE LENGTH





